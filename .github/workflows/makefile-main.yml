name: Build Check (main)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - name: "Raspberry Pi"
            makefile_path: "build/linux/rpi/makefile"
          - name: "Banana Pi R4"
            makefile_path: "build/linux/bpi/makefile"
      fail-fast: false

    name: Build for ${{ matrix.platform.name }}

    steps:
    - name: Checkout current repository (rdk-wifi-hal)
      uses: actions/checkout@v4
      with:
        path: 'rdk-wifi-hal'

    - name: Clone OneWifi (develop) and unified-wifi-mesh
      run: |
        mkdir -p easymesh_project
        # ⬇️ clone OneWifi *develop* so platform makefiles exist
        git clone --depth 1 --branch develop https://github.com/rdkcentral/OneWifi.git easymesh_project/OneWifi
        git clone --depth 1 https://github.com/rdkcentral/unified-wifi-mesh.git easymesh_project/unified-wifi-mesh

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages') }}
        restore-keys: |
          ${{ runner.os }}-apt-

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential \
                                cmake \
                                python3 \
                                python3-pip \
                                git \
                                vim \
                                libev-dev \
                                libjansson-dev \
                                zlib1g-dev \
                                libnl-3-dev \
                                libnl-genl-3-dev \
                                libnl-route-3-dev \
                                libavro-dev \
                                libcjson1 libcjson-dev \
                                libssl-dev \
                                uuid-dev \
                                libmysqlcppconn-dev \
                                libreadline-dev \
                                iptables \
                                mariadb-server \
                                gnupg \
                                file \
                                golang

    - name: Setup OneWiFi for ${{ matrix.platform.name }}
      working-directory: easymesh_project/OneWifi
      env:
        GITHUB_ACTOR: ${{ github.actor }}
      run: |
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git config --global user.name "${{ github.actor }}"
        make -f ${{ matrix.platform.makefile_path }} setup
        cd ..
        # Place our HAL next to OneWifi (as expected by include paths)
        rm -rf rdk-wifi-hal
        mv ../rdk-wifi-hal .

    - name: Sanity check (halinterface exposes op_class)
      run: |
        set -e
        header="easymesh_project/halinterface/include/wifi_hal.h"
        if [ ! -f "$header" ]; then
          echo "ERROR: $header not found."
          exit 1
        fi
        if ! grep -q "op_class" "$header"; then
          echo "ERROR: halinterface header lacks 'op_class' (branch mismatch?)."
          exit 1
        fi
        echo "OK: 'op_class' found in halinterface header."

    - name: Build OneWiFi for ${{ matrix.platform.name }}
      working-directory: easymesh_project/OneWifi
      run: |
        make -f ${{ matrix.platform.makefile_path }} all
